function convertToRoman(num) {
// create an object with relevant keys with roman numeral
// equivalents as values
    let roman = {
 0: "",
 1: "I",
 2: "II",
 3: "III",
 4: "IV",
 5: "V",
 6: "VI",
 7: "VII",
 8: "VIII",
 9: "IX",
 10: "X",
 20: "XX",
 30: "XXX",
 40: "XL",
 50: "L",
 60: "LX",
 70: "LXX",
 80: "LXXX",
 90: "XC",
 100: "C",
 200: "CC",
 300: "CCC",
 400: "CD",
 500: "D",
 600: "DC",
 700: "DCC",
 800: "DCCC",
 900: "CM",
 1000: "M",
 2000: "MM",
 3000: "MMM"
}

// now that key values are set, just need to take it one digit at a time so do num.toStr so can use index
num = num.toString();
 if (num >= 1 && num <= 10) {
  num = roman[num];
 } else if (num > 10 && num <= 99) {
  num = `${roman[num[0] * 10]}${roman[num[1]]}`
 } else if (num >= 100 && num <= 999) {
  num = `${roman[num[0] * 100]}${roman[num[1] * 10]}${roman[num[2]]}`
 } else if (num >= 1000 && num <= 3999) {
  num = `${roman[num[0] * 1000]}${roman[num[1] * 100]}${roman[num[2] * 10]}${roman[num[3]]}`
 }
 return num;
}

convertToRoman(36);
